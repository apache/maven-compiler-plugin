 ------
 Using Non-Javac Compilers
 ------
 Edwin Punzalan
 ------
 2006-07-19
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html


Using Non-Javac Compilers

  Contrary to this plugin's name, the Compiler Plugin does not compile the
  sources of your project by itself. To compile, the Compiler Plugin uses
  another class to compile them.

  The parameter <<<compilerId>>> determines which class will be used.

  By default, the Maven Compiler Plugin uses the <<<javac>>> compiler
  bundled in the <<<javax.tools>>> package of the standard Java library.
  But it is possible to use any other compiler, as long the
  implementation declares itself as a <<<javax.tools.JavaCompiler>>> service.
  To use such an implementation:

  * Add the compiler implementation in the Maven compiler plugin dependencies.

  * Declare the compiler's identifier in the <<<compilerId>>> element of the Maven plugin configuration.
    The identifier value shall be the value returned by the <<<JavaCompiler.name()>>> method of the implementation.

  []

  The example below shows how to use the Eclipse compiler <<<ecj>>>.
  Note: this configuration requires Maven 4 with Maven Compiler Plugin 4.

+-----
<project>
  [...]
  <build>
    [...]
    <plugins>
      [...]
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${project.version}</version>
        <configuration>
          <compilerId>ecj</compilerId>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.eclipse.jdt</groupId>
            <artifactId>ecj</artifactId>
            <version>${eclipseCompilerVersion}</version>
          </dependency>
        </dependencies>
      </plugin>
  [...]
</project>
+-----
